
作者：hou_sky 
来源：CSDN 
原文：https://blog.csdn.net/hgj125073/article/details/8290394 
版权声明：本文为博主原创文章，转载请附上博文链接！

abcdefg sndoasdnioas
不是定位文件指针，文件指针指向文件/流，文件指针如果不重新赋值将不会改变指向别的文件。

位置指针指向文件内部的字节位置，随着文件的读取会移动。

int fseek(FILE *stream, long offset, int fromwhere);

成功，返回0，失败返回-1，并设置errno的值，可以用perror()函数输出错误。

函数设置文件指针stream的位置。如果执行成功，stream将指向以fromwhere（偏移起始位置：文件头0，当前位置1，文件尾2）为基准，偏移offset（指针偏移量）个字节的位置。如果执行失败(比如offset超过文件自身大小)，则不改变stream指向的位置。

fseek函数和lseek函数类似，但lseek返回的是一个off_t数值，而fseek返回的是一个整型。


fseek函数的文件指针，应该为已经打开的文件。如果没有打开的文件，那么将会出现错误。 fseek函数也可以这样理解，相当于在文件当中定位。这样在读取规律性存储文件时可以利用其OFFSET偏移量读取文件上任意的内容。

fseek函数一般用于二进制文件，也可以用于文本文件。用于文本文件操作时，需特别注意回车换行的情况：因为在一般浏览工具如UltraEdit中，回车换行视为两个字符0x0D和0x0A，但真实的文件读写和定位时确按照一个字符0x0A进行处理，因此碰到此类问题时，可以考虑将文件整个读入内存，然后在内存中手工插入0x0D的方法，这样可以达到较好的处理效果。
--------------------- 
作者：hou_sky 
来源：CSDN 
